; The purpose of this example is to see how two related but independent
; aggregates behave w.r.t. joins of their inner selects, and joins of their
; results.

#functor div_i32(bound i32 LHS, bound i32 RHS, free i32 Res) @range(.)
#functor sum_i32(aggregate i32 Val, summary i32 Sum)
#functor count_i32(aggregate i32 Val, summary i32 Count)
#functor new_weight_i32(bound i32 OldWeight, bound i32 NewWeight, free i32 NewWeightOut) @range(.)

#local node(i32 X)
#local edge(i32 From, i32 To)
#local edge_weight(i32 From, i32 To, mutable(new_weight_i32) Weight)
#query average_incoming_weight(bound i32 X, free i32 Avg)
#message add_edge(i32 From, i32 To, i32 Weight)

edge(From, To) : add_edge(From, To, _).
edge_weight(From, To, Weight) : add_edge(From, To, Weight).

node(From) : edge(From, _).
node(To) : edge(_, To).

average_incoming_weight(X, Avg)
  : sum_i32(AX_Weight, Sum)
      over (i32 X, i32 AX_Weight) {
        edge_weight(_A, X, AX_Weight)
      }
  , count_i32(BX_Weight, Count)
      over (i32 X, i32 BX_Weight) {
        edge_weight(_B, X, BX_Weight)
      }
  , div_i32(Sum, Count, Avg).

